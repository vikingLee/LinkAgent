<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>io.shulie.instrument.module</groupId>
    <artifactId>instrument-modules</artifactId>
    <version>1.0.0</version>

    <packaging>pom</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <simulator.version>5.3.0</simulator.version>
        <pradar.core.version>2.0.0.1</pradar.core.version>
        <pradar.register.version>2.0.0.0</pradar.register.version>
        <simulator.bootstrap.api.version>1.0.0</simulator.bootstrap.api.version>
        <simulator.internal.bootstrap.api.version>1.0.0</simulator.internal.bootstrap.api.version>
        <biz.classloader.inject.shadow.job.version>1.0.0</biz.classloader.inject.shadow.job.version>
        <module.datasource.common.version>2.0.0.0</module.datasource.common.version>
        <module.servlet.common.version>2.0.0.0</module.servlet.common.version>
        <module.log.data.pusher>2.0.0.0</module.log.data.pusher>
        <module.pradar.config.fetcher>2.0.0.1</module.pradar.config.fetcher>
    </properties>

    <profiles>

        <!-- 默认 -->
        <profile>
            <id>default</id>
            <properties>
                <tools-jar>${java.home}/../lib/tools.jar</tools-jar>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>

    </profiles>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>2.7</version>
            </plugin>


            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>2.17</version>
                <configuration>
                    <!-- 同样的checkstyle校验配置文件 -->
                    <configLocation>checkstyle.xml</configLocation>
                    <packageNamesLocation>com/pamirs/custom/checkstyle/packagenames.xml</packageNamesLocation>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>2.3</version>
            </plugin>
        </plugins>
    </reporting>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.4</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>2.2-beta-5</version>
                </plugin>

                <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>
                                            org.apache.maven.plugins
                                        </groupId>
                                        <artifactId>
                                            maven-checkstyle-plugin
                                        </artifactId>
                                        <versionRange>[2.17,)</versionRange>
                                        <goals>
                                            <goal>checkstyle</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore></ignore>
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.0</version>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                    <encoding>UTF-8</encoding>
                    <showDeprecation>true</showDeprecation>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.2-beta-5</version>
                <configuration>
                    <appendAssemblyId>false</appendAssemblyId>
                    <outputDirectory>../../output/</outputDirectory>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>attached</goal>
                        </goals>
                        <phase>package</phase>
                        <configuration>
                            <descriptorRefs>
                                <descriptorRef>jar-with-dependencies</descriptorRef>
                            </descriptorRefs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <version>4.0.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <offline>true</offline>
                    <!--日期格式;默认值:dd.MM.yyyy '@' HH:mm:ss z;-->
                    <dateFormat>yyyyMMddHHmmss</dateFormat>
                    <!--,构建过程中,是否打印详细信息;默认值:false;-->
                    <verbose>true</verbose>
                    <!-- ".git"文件路径;默认值:${project.basedir}/.git; -->
                    <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
                    <!--若项目打包类型为pom,是否取消构建;默认值:true;-->
                    <skipPoms>false</skipPoms>
                    <!--是否生成"git.properties"文件;默认值:false;-->
                    <generateGitPropertiesFile>true</generateGitPropertiesFile>
                    <!--指定"git.properties"文件的存放路径(相对于${project.basedir}的一个路径);-->
                    <generateGitPropertiesFilename>${project.build.outputDirectory}/version.properties
                    </generateGitPropertiesFilename>
                    <!--".git"文件夹未找到时,构建是否失败;若设置true,则构建失败;若设置false,则跳过执行该目标;默认值:true;-->
                    <failOnNoGitDirectory>true</failOnNoGitDirectory>
                    <includeOnlyProperties>
                        <includeOnlyProperty>git.branch</includeOnlyProperty>
                        <includeOnlyProperty>git.build.time</includeOnlyProperty>
                        <includeOnlyProperty>git.build.user.name</includeOnlyProperty>
                        <includeOnlyProperty>^git.commit.id.(abbrev|full)$</includeOnlyProperty>
                    </includeOnlyProperties>
                    <!--git描述配置,可选;由JGit提供实现;-->
                    <gitDescribe>
                        <!--是否生成描述属性-->
                        <skip>false</skip>
                        <!--提交操作未发现tag时,仅打印提交操作ID,-->
                        <always>false</always>
                        <!--提交操作ID显式字符长度,最大值为:40;默认值:7;
                            0代表特殊意义;后面有解释;
                        -->
                        <abbrev>7</abbrev>
                        <!--构建触发时,代码有修改时(即"dirty state"),添加指定后缀;默认值:"";-->
                        <dirty>-dirty</dirty>
                        <!--always print using the "tag-commits_from_tag-g_commit_id-maybe_dirty" format, even if "on" a tag.
                            The distance will always be 0 if you're "on" the tag.
                        -->
                        <forceLongFormat>false</forceLongFormat>
                    </gitDescribe>
                </configuration>
            </plugin>



            <!--            //自定义校验规则-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>2.17</version>
                <configuration>
                    <!-- checkstyle的配置文件路径，如果不在根路径则在前面加上具体的目录即可 -->
                    <configLocation>checkstyle.xml</configLocation>
                    <!-- 配置包D工程中的配置文件 -->
                    <packageNamesLocation>net/genez/customck/check/packagenames.xml</packageNamesLocation>
                </configuration>
                <!-- 该配置非常重要，如果没有executions标签，则在该工程执行install时不会执行自定义的校验 -->
                <executions>
                    <execution>
                        <!-- 该插件执行的生命周期点，在initialize时进行执行 -->
                        <phase>initialize</phase>
                        <!-- 执行目标，要想具体了解目标的概念需要了解maven的插件生命周期，这里不再展开，下方会有推荐阅读的链接 -->
                        <goals>
                            <goal>checkstyle</goal><!-- checkstyle只会统计数量。check会在控制台输出具体结果 -->
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <!-- 插件依赖的checkstyle版本，2.17版本的插件默认使用的6.11.2，如果要升级就需要增加以下配置 -->
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>7.3</version>
                    </dependency>
                    <!-- 依赖的已安装的自定义插件 -->
                    <dependency>
                        <groupId>io.shulie</groupId>
                        <artifactId>custom-maven-checkstyle</artifactId>
                        <version>1.0.1</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>io.shulie.instrument.simulator</groupId>
            <artifactId>instrument-simulator-api</artifactId>
            <version>${simulator.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.shulie.instrument.simulator</groupId>
            <artifactId>instrument-simulator-base-api</artifactId>
            <version>${simulator.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.shulie.instrument.simulator</groupId>
            <artifactId>instrument-simulator-messager</artifactId>
            <version>${simulator.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.kohsuke.metainf-services</groupId>
            <artifactId>metainf-services</artifactId>
            <version>1.7</version>
            <scope>compile</scope>
        </dependency>
    </dependencies>

    <modules>
        <module>bootstrap-inject</module>
        <module>user-modules</module>
        <module>biz-classloader-inject</module>
    </modules>
</project>